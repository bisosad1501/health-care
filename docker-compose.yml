services:
  # Database
  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=healthcare_default
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Common Auth Library
  common-auth:
    build: ./common-auth
    volumes:
      - ./common-auth:/app

  # Redis for caching, session management and message broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "4000:4000"
      - "4443:4443"
    environment:
      - PORT=4000
      - HTTPS_PORT=4443
      - HTTPS_ENABLED=${HTTPS_ENABLED:-false}
      - NODE_ENV=${NODE_ENV:-development}
      - JWT_SECRET=${JWT_SECRET:-HS256_JWT_SECRET_KEY_SHOULD_BE_AT_LEAST_32_CHARS_LONG}
      - REDIS_URL=redis://redis:6379/0
      - SESSION_TTL=86400
      - SESSION_COOKIE_NAME=healthcare_session
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_HTTPONLY=true
      - SESSION_COOKIE_SAMESITE=Lax
      - MAX_SESSIONS_PER_USER=5
      - ROTATE_REFRESH_TOKENS=false
      - USER_SERVICE_URL=http://user-service:8000
      - APPOINTMENT_SERVICE_URL=http://appointment-service:8002
      - MEDICAL_RECORD_SERVICE_URL=http://medical-record-service:8001
      - BILLING_SERVICE_URL=http://billing-service:8003
      - PHARMACY_SERVICE_URL=http://pharmacy-service:8004
      - LAB_SERVICE_URL=http://laboratory-service:8005
      - NOTIFICATION_SERVICE_URL=http://notification-service:8006
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      - redis
      - user-service
    volumes:
      - ./api-gateway:/app
      - /app/node_modules

  # User Service (Authentication, Authorization & User Management)
  user-service:
    build: 
      context: .
      dockerfile: ./user-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/healthcare_user
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8000:8000"
    volumes:
      - ./user-service:/app
      - ./common-auth:/app/common-auth

  # Medical Record Service
  medical-record-service:
    build:
      context: .
      dockerfile: ./medical-record-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/healthcare_medical
      - REDIS_URL=redis://redis:6379/0
      - API_GATEWAY_URL=http://api-gateway:4000
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8001:8001"
    volumes:
      - ./medical-record-service:/app
      - ./common-auth:/app/common-auth

  # Appointment Service
  appointment-service:
    build:
      context: .
      dockerfile: ./appointment-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_NAME=healthcare_appointments
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - API_GATEWAY_URL=http://api-gateway:4000
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8002:8002"
    volumes:
      - ./appointment-service:/app
      - ./common-auth:/app/common-auth

  # Billing Service
  billing-service:
    build:
      context: .
      dockerfile: ./billing-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_NAME=healthcare_billing
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - API_GATEWAY_URL=http://api-gateway:4000
      - USER_SERVICE_URL=http://user-service:8000
      - MEDICAL_RECORD_SERVICE_URL=http://medical-record-service:8001
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8003:8003"
    volumes:
      - ./billing-service:/app
      - ./common-auth:/app/common-auth
      
  # Pharmacy Service
  pharmacy-service:
    build:
      context: .
      dockerfile: ./pharmacy-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/healthcare_pharmacy
      - API_GATEWAY_URL=http://api-gateway:4000
      - USER_SERVICE_URL=http://user-service:8000
      - MEDICAL_RECORD_SERVICE_URL=http://medical-record-service:8001
    ports:
      - "8004:8004"
    volumes:
      - ./pharmacy-service:/app
      - ./common-auth:/app/common-auth

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./notification-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_NAME=healthcare_notification
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - API_GATEWAY_URL=http://api-gateway:4000
      - USER_SERVICE_URL=http://user-service:8000
      - MEDICAL_RECORD_SERVICE_URL=http://medical-record-service:8001
      - APPOINTMENT_SERVICE_URL=http://appointment-service:8002
      - BILLING_SERVICE_URL=http://billing-service:8003
      - PHARMACY_SERVICE_URL=http://pharmacy-service:8004
      - LABORATORY_SERVICE_URL=http://laboratory-service:8005
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8006:8006"
    volumes:
      - ./notification-service:/app
      - ./common-auth:/app/common-auth

  # Laboratory Service
  laboratory-service:
    build:
      context: .
      dockerfile: ./laboratory-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DEBUG=True
      - SECRET_KEY=your_secret_key
      - DATABASE_NAME=healthcare_laboratory
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - API_GATEWAY_URL=http://api-gateway:4000
      - USER_SERVICE_URL=http://user-service:8000
      - MEDICAL_RECORD_SERVICE_URL=http://medical-record-service:8001
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=adminpassword
    ports:
      - "8005:8005"
    volumes:
      - ./laboratory-service:/app
      - ./common-auth:/app/common-auth

volumes:
  postgres_data:
  redis_data:
