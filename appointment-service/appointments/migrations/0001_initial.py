# Generated by Django 4.2.7 on 2025-04-14 01:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.IntegerField(help_text='ID của bệnh nhân trong user-service')),
                ('status', models.CharField(choices=[('PENDING', 'Chờ xác nhận'), ('CONFIRMED', 'Đã xác nhận'), ('CANCELLED', 'Đã hủy'), ('COMPLETED', 'Đã hoàn thành'), ('NO_SHOW', 'Không đến')], default='PENDING', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Lý do khám', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('medical_record_id', models.IntegerField(blank=True, help_text='ID hồ sơ y tế liên quan', null=True)),
                ('insurance_id', models.CharField(blank=True, help_text='Mã bảo hiểm', max_length=100, null=True)),
                ('created_by', models.IntegerField(blank=True, help_text='ID người tạo lịch hẹn', null=True)),
                ('prescription_id', models.IntegerField(blank=True, help_text='ID đơn thuốc liên quan', null=True)),
                ('lab_request_id', models.IntegerField(blank=True, help_text='ID yêu cầu xét nghiệm liên quan', null=True)),
                ('billing_id', models.IntegerField(blank=True, help_text='ID hóa đơn liên quan', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['time_slot__date', 'time_slot__start_time'],
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(help_text='ID của bác sĩ trong user-service')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='Ngày trong tuần (0: Thứ 2, 6: Chủ nhật)')),
                ('start_time', models.TimeField(help_text='Giờ bắt đầu làm việc')),
                ('end_time', models.TimeField(help_text='Giờ kết thúc làm việc')),
                ('is_available', models.BooleanField(default=True, help_text='Trạng thái hoạt động của lịch làm việc')),
                ('location', models.CharField(blank=True, help_text='Địa điểm làm việc', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Doctor Availability',
                'verbose_name_plural': 'Doctor Availabilities',
                'unique_together': {('doctor_id', 'weekday', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(help_text='ID của bác sĩ trong user-service')),
                ('date', models.DateField(help_text='Ngày khám')),
                ('start_time', models.TimeField(help_text='Giờ bắt đầu')),
                ('end_time', models.TimeField(help_text='Giờ kết thúc')),
                ('is_available', models.BooleanField(default=True, help_text='Khung giờ có sẵn sàng không')),
                ('location', models.CharField(blank=True, help_text='Địa điểm khám', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('availability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='appointments.doctoravailability')),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['date', 'start_time'],
                'unique_together': {('doctor_id', 'date', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification')], max_length=10)),
                ('scheduled_time', models.DateTimeField(help_text='Thời gian dự kiến gửi nhắc nhở')),
                ('status', models.CharField(choices=[('PENDING', 'Chờ gửi'), ('SENT', 'Đã gửi'), ('FAILED', 'Gửi thất bại')], default='PENDING', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(help_text='Nội dung tin nhắn nhắc nhở')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'verbose_name': 'Appointment Reminder',
                'verbose_name_plural': 'Appointment Reminders',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='time_slot',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='appointments.timeslot'),
        ),
    ]
